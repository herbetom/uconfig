name: Build

on:
  pull_request:
    branches:
      - main
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: "40 7 * * *"

permissions:
  contents: read

env:
  FEEDNAME: uconfig
  PACKAGES: uconfig

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.release }} - ${{ matrix.arch }} build
    permissions:
      id-token: write
      attestations: write
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        release:
          - SNAPSHOT
          #- openwrt-24.10
        arch:
          - x86_64
          - aarch64_cortex-a53       # (bcm27xx-bcm2710, mediatek-filogic, ...)
          - mipsel_24kc              # (ramips-mt7620, ramips-mt7621, ramips-mt76x8, ramips-rt305x)
          - arm_cortex-a7_neon-vfpv4 # (ipq40xx-generic, ...)
          - mips_24kc                # (ath79-generic, ath79-nand, realtek-rtl839x, realtek-rtl930x, ...)
          #- powerpc_8548             # (mpc85xx-p1010, mpc85xx-p1020, mpc85xx-p2020)

    steps:
      - uses: actions/checkout@v4

      - name: "install tools"
        run: "sudo apt-get update; sudo apt-get install openssl"

      - name: Build
        uses: openwrt/gh-action-sdk@v9
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.release }}
          FEEDNAME: "${{ env.FEEDNAME }}"
          PACKAGES: "${{ env.PACKAGES }}"
          PRIVATE_KEY: "${{ secrets.PRIVATE_KEY }}"
          INDEX: 1
          V: "s"

      - name: list generated files
        run: ls -R bin/

      - name: Store Logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.release }}-${{ matrix.arch}}-logs
          path: logs/

      - name: "store public key alongside"
        run: |
          if [[ -n "${{ secrets.PRIVATE_KEY }}" ]]; then
            echo "${{ secrets.PRIVATE_KEY }}" | openssl ec -pubout > bin/packages/${{ matrix.arch}}/repokey.pub
          fi

      - name: "generate sha256sums"
        run: |
          cd ./bin/packages/${{ matrix.arch}}/
          find . -mindepth 2 -maxdepth 2 -type f -ipath "./${{ env.FEEDNAME }}/*" -exec shasum -a 256 {} + > sha256sums

      - name: Upload packages as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.release }}-${{ matrix.arch}}-packages
          compression-level: 0
          path: |
            bin/packages/${{ matrix.arch}}/${{ env.FEEDNAME }}/*.ipk
            bin/packages/${{ matrix.arch}}/${{ env.FEEDNAME }}/*.apk
            bin/packages/${{ matrix.arch}}/${{ env.FEEDNAME }}/index.json
            bin/packages/${{ matrix.arch}}/${{ env.FEEDNAME }}/packages.adb
            bin/packages/${{ matrix.arch}}/repokey.pub
            bin/packages/${{ matrix.arch}}/sha256sums

      - name: Attest Image Build Provenance
        if: github.ref_name == vars.PRODUCTION_BRANCH
        uses: actions/attest-build-provenance@v2
        with:
          subject-checksums: bin/packages/${{ matrix.arch}}/sha256sums
          subject-name: ${{ matrix.arch}}
          show-summary: false

  combine:
    name: Combine packages
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: "*-packages"

      - name: list files
        run: "ls -R ./artifacts/*-packages"

      - name: "combine-artifacts.sh"
        run: ".github/combine-artifacts.sh"

      - name: list files
        run: "ls -R combined/"

      - name: Store packages
        uses: actions/upload-artifact@v4
        with:
          name: combined-packages
          compression-level: 0
          path: combined/

  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    needs: combine
    environment: production
    concurrency: production
    if: github.ref_name == vars.PRODUCTION_BRANCH
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: "combined-packages"

      - name: list all files
        run: "ls -R"

      - name: Minio Deploy
        uses: herbetom/minio-deploy-action@v1
        if: vars.S3_DEPLOY == '1'
        with:
          endpoint: ${{ secrets.MINIO_ENDPOINT }}
          access_key: ${{ secrets.MINIO_ACCESS_KEY }}
          secret_key: ${{ secrets.MINIO_SECRET_KEY }}
          bucket: ${{ vars.MINIO_BUCKET }}
          source_dir: 'combined-packages'
          target_dir: '/'
          extra_args: '--remove'
